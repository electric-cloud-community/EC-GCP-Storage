pluginInfo:
  # This is default sample specification
  # Feel free to change it
  # Call flowpdk showdoc pluginspec to see the list of available fields and their description
  pluginName: 'EC-GCP-Storage'
  version: '1.3.1'
  description: 'This plugin integrates with Google Cloud Storage'
  author: 'Polina'
  supportUrl: 'none'
  category: 'Resource Management'
  shell: 'ec-groovy'

# Plugin configuration description
configuration:
  # This is a shell used for checking connection
  shell: 'ec-groovy'
  # A script for checking connection will be generated
  checkConnection: 'true'
  # A set of fields will be added to process debug level in the configuration
  hasDebugLevel: true
  parameters:
  -
    name: config
    documentation: The name for the created configuration
    required: true
    type: entry
    label: Configuration Name
  -
    name: desc
    documentation: Description for the configuration
    required: false
    type: entry
    label: Description
  -
    name: credential
    documentation: Service account key in JSON format
    required: true
    type: credential
    credentialType: key
    label: Service Account Key

procedures:
-
  name: Download Objects
  description: This procedure downloads object from the specified path into the filesystem
  hasConfig: true
  parameters:
  -
    name: bucketName
    documentation: Name of the bucket
    required: true
    type: entry
    label: Bucket
  - name: path
    required: true
    type: entry
    label: Path
    documentation: Path in the bucket to download objects from. Must be a folder prefix.
  - name: dest
    label: Destination
    type: entry
    required: true
    documentation: Destination folder on the filesystem.
  - name: overwrite
    type: checkbox
    checkedValue: true
    uncheckedValue: false
    label: Overwrite?
    documentation: If checked, the file will be overwritten, otherwise the procedure will fail.

-
  name: Download Object
  description: This procedure download specific object from the specified path into the filesystem
  hasConfig: true
  parameters:
    -
      name: bucketName
      documentation: Name of the bucket
      required: true
      type: entry
      label: Bucket
    - name: path
      required: true
      type: entry
      label: File Name
      documentation: Full path to the file in bucket.
    - name: dest
      label: Destination
      type: entry
      required: true
      documentation: Destination file on the filesystem.
    - name: overwrite
      type: checkbox
      checkedValue: true
      uncheckedValue: false
      label: Overwrite?
      documentation: If checked, the file will be overwritten, otherwise the procedure will fail.


- name: List Objects
  description: This procedure lists the objects in the specified bucket
  hasConfig: true
  parameters:
    - name: bucketName
      label: Bucket
      documentation: Bucket name to list object in.
      required: true
      type: entry
    - name: path
      label: Path
      required: false
      type: entry
      documentation: Path to filter objects
    - name: resultProperty
      required: true
      value: /myJob/objects
      label: Result Property Sheet
      documentation: Property sheet to store results
  outputParameters:
    objects: JSON list of objects found

- name: Upload Object
  description: This procedure uploads an object to bucket
  hasConfig: true
  parameters:
    - name: bucketName
      required: true
      label: Bucket Name
      documentation: Name of the bucket to upload objects to.
    - name: objectPath
      required: false
      label: File Path
      documentation: Path to the file, may be either absolute or relative to the job workspace.
    - name: folder
      label: File Folder
      documentation: Folder to look for the file if the file name is not determined.
      required: false
    - name: includePattern
      label: Include Pattern
      documentation: Include pattern to look for the file, e.g. \.log$
    - name: excludePattern
      label: Exclude Pattern
      documentation: Exclude pattern to be used while looking for the file, e.g. \.log$
    - name: destination
      required: true
      label: Destination Path
      documentation: Path in the bucket to upload objects to.
    - name: makePublic
      type: checkbox
      checkedValue: true
      label: Make Public?
      documentation: If checked, the objects will be made public. Not applicable to the buckets with uniform access.
      uncheckedValue: false
      value: false
      required: false
    - name: cacheControl
      type: entry
      label: Cache Control Header
      documentation: The value for a cache control header.
      required: false
    - name: overwrite
      type: checkbox
      checkedValue: true
      documentation: If checked, the existing object will be overwritten.
      uncheckedValue: false
      value: false
    - name: resultProperty
      value: /myJob/result
      required: true
      type: entry
      label: Result Property Sheet
      documentation: Property sheet to save results.

  outputParameters:
    object: JSON representation of the uploaded object
    objectLink: Media link of the uploaded object.

- name: Upload Folder
  description: This procedure uploads a folder to bucket
  hasConfig: true
  parameters:
    - name: bucketName
      required: true
      documentation: Target bucket name.
      label: Bucket Name
    - name: folder
      type: entry
      required: false
      label: Source Folder
      documentation: Folder path to upload. Can be either absolute or relative (will be calculated from the job workspace).
    - name: includePatterns
      type: textarea
      required: false
      label: Include Patterns
      documentation: |
        Regular expression for file names to include into the upload, e.g. .*log, newline-separated.
    - name: excludePatterns
      type: textarea
      label: Exclude Patterns
      documentation: |
       Regular expression for file names to exclude from the upload, e.g. .*log, newline-separated.
      required: false
    - name: destination
      required: true
      documentation: |
       Destination path in the target bucket, e.g. my/path. If the file in the folder named {folder}/path/file,
       and the path is my/folder, it will be placed at gs://{bucket}/my/folder/path/file.
      label: Destination Object Path
    - name: makePublic
      type: checkbox
      checkedValue: true
      label: Make Public?
      documentation: If checked, the objects will be made public. Not applicable to the buckets with uniform access.
      uncheckedValue: false
      value: false
      required: false
    - name: cacheControl
      type: entry
      label: Cache Control Header
      documentation: The value for a cache control header.
      required: false
    - name: overwrite
      type: checkbox
      checkedValue: true
      documentation: If checked, the existing object will be overwritten.
      uncheckedValue: false
      value: false
    - name: resultProperty
      value: ''
      required: false
      type: entry
      label: Result Property Sheet
      documentation: Result property sheet to save results to. If not provided, the results will be saved into output parameters only.
  outputParameters:
    objects: JSON representation of the uploaded objects


- name: Run Script
  hasConfig: true
  description: Runs a custom groovy script with the prepared Storage client
  parameters:
    - name: script
      type: textarea
      label: Script
      required: true
      documentation: |
        Script to evaluate. The following variables are accessible:

        storage - storage client
        ef - ElectricFlow Groovy API client
        zone - zone name from the configuration
        project - project ID from the configuration
        wrapper - Storage wrapper from this plugin

        Both wrapper and compute clients are already initialized.

      value: |
        println "Storage raw client: $storage"
        println "Project ID: $project"
        println "Flow Client: $ef"
        println "Storage Wrapper: $wrapper"

  outputParameters:
    output: Some output parameter to use in the script
